package fraol.project;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Fraol
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        Buttongrouping();          //group radio buttons when the program starts
        panelModifier("all");      //hiding inner panel except the mainpanel
        visibleChoicePanel(false); //hide inner choice panel
        try {
            loginPage();           //run login page on start
        } catch (IOException ex) {
           JOptionPane.showMessageDialog(null, "Data Reading Error","IO error",JOptionPane.ERROR_MESSAGE);  
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        LoginPanel2 = new javax.swing.JPanel();
        signupText = new javax.swing.JLabel();
        Line1 = new javax.swing.JSeparator();
        promotLabel = new javax.swing.JLabel();
        promotLabel2 = new javax.swing.JLabel();
        promotLabel3 = new javax.swing.JLabel();
        AdminText = new javax.swing.JLabel();
        PasswordText = new javax.swing.JLabel();
        AdminField = new javax.swing.JTextField();
        PasswordField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        comNameLabel = new javax.swing.JLabel();
        comAddLabel = new javax.swing.JLabel();
        comemailLabel = new javax.swing.JLabel();
        comNameField = new javax.swing.JTextField();
        comAddField = new javax.swing.JTextField();
        comwebField = new javax.swing.JTextField();
        SignUpButton = new javax.swing.JButton();
        backToLogin = new javax.swing.JLabel();
        colorBackground2 = new javax.swing.JLabel();
        insertPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        sexLabel = new javax.swing.JLabel();
        radioMale = new javax.swing.JRadioButton();
        radioFemale = new javax.swing.JRadioButton();
        ageLabel = new javax.swing.JLabel();
        addLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        jobLabel = new javax.swing.JLabel();
        rangeLabel1 = new javax.swing.JLabel();
        hourLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        ageField = new javax.swing.JTextField();
        addField = new javax.swing.JTextField();
        phoneField = new javax.swing.JTextField();
        jobField = new javax.swing.JTextField();
        hourField = new javax.swing.JTextField();
        clearButton = new javax.swing.JButton();
        insertButton = new javax.swing.JButton();
        comboBox1 = new javax.swing.JComboBox<>();
        insertInfoLabel = new javax.swing.JLabel();
        searchPanel = new javax.swing.JPanel();
        Another = new javax.swing.JLabel();
        searchLabel = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        searchLabel2 = new javax.swing.JLabel();
        searchLabel3 = new javax.swing.JLabel();
        searchLabel4 = new javax.swing.JLabel();
        searchLabel5 = new javax.swing.JLabel();
        searchLabel6 = new javax.swing.JLabel();
        displayNameLabel = new javax.swing.JLabel();
        displaySexLabel = new javax.swing.JLabel();
        displayJobLabel = new javax.swing.JLabel();
        displayAddressLabel = new javax.swing.JLabel();
        displaySalaryLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        deleteTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        updateTable = new javax.swing.JTable();
        incentivePanel = new javax.swing.JPanel();
        amountLable = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        payButton = new javax.swing.JButton();
        comboBox3 = new javax.swing.JComboBox<>();
        IncentiveName = new javax.swing.JLabel();
        IncentiveLable = new javax.swing.JLabel();
        Line3 = new javax.swing.JSeparator();
        jScrollPane5 = new javax.swing.JScrollPane();
        incentiveList = new javax.swing.JList<>();
        paidEmployees = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        JobList = new javax.swing.JList<>();
        deleteInfoLabel = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        updatecancleBut = new javax.swing.JButton();
        upNameLable = new javax.swing.JLabel();
        upSexLable = new javax.swing.JLabel();
        upRadioMale = new javax.swing.JRadioButton();
        upRadioFemale = new javax.swing.JRadioButton();
        upAgeLable = new javax.swing.JLabel();
        upJobLable = new javax.swing.JLabel();
        upHourLable = new javax.swing.JLabel();
        upAddressLable = new javax.swing.JLabel();
        upRangeLable = new javax.swing.JLabel();
        upPhoneLable = new javax.swing.JLabel();
        upNameField = new javax.swing.JTextField();
        upAgeField = new javax.swing.JTextField();
        upJobField = new javax.swing.JTextField();
        upHourField = new javax.swing.JTextField();
        upAddField = new javax.swing.JTextField();
        upPhoneField = new javax.swing.JTextField();
        comboBox2 = new javax.swing.JComboBox<>();
        updateInfoLabel = new javax.swing.JLabel();
        moreDisplayBut = new javax.swing.JButton();
        FormatButton = new javax.swing.JButton();
        NamePromotion = new javax.swing.JLabel();
        EmployeeNoLabel = new javax.swing.JLabel();
        Line2 = new javax.swing.JSeparator();
        WorkerNoLabel = new javax.swing.JLabel();
        choicePanel = new javax.swing.JPanel();
        LoginPanel = new javax.swing.JPanel();
        iconLabel = new javax.swing.JLabel();
        colorbackground = new javax.swing.JLabel();
        appLabel = new javax.swing.JLabel();
        appLabel2 = new javax.swing.JLabel();
        homeTab = new javax.swing.JLabel();
        insertTab = new javax.swing.JLabel();
        displayTab = new javax.swing.JLabel();
        searchTab = new javax.swing.JLabel();
        deleteTab = new javax.swing.JLabel();
        modifyTab = new javax.swing.JLabel();
        sortTab = new javax.swing.JLabel();
        appLabel3 = new javax.swing.JLabel();
        ResetLabel = new javax.swing.JLabel();
        IncentiveTab = new javax.swing.JLabel();
        appLabel4 = new javax.swing.JLabel();
        tabPanel = new javax.swing.JPanel();
        closeLabel = new javax.swing.JLabel();
        minimizeLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mainPanel.setLayout(null);

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        displayTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        displayTable.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Sex", "Job", "Address", "Salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        displayTable.setEnabled(false);
        displayTable.setRowHeight(25);
        displayTable.setSelectionBackground(new java.awt.Color(255, 207, 240));
        displayTable.setSelectionForeground(new java.awt.Color(51, 0, 51));
        jScrollPane1.setViewportView(displayTable);

        mainPanel.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 900, 600);

        LoginPanel2.setLayout(null);

        signupText.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        signupText.setForeground(new java.awt.Color(248, 193, 158));
        signupText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        signupText.setText("SignUp");
        LoginPanel2.add(signupText);
        signupText.setBounds(190, 80, 390, 70);

        Line1.setBackground(new java.awt.Color(0, 0, 0));
        Line1.setForeground(new java.awt.Color(0, 0, 0));
        Line1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Line1.setPreferredSize(new java.awt.Dimension(50, 15));
        LoginPanel2.add(Line1);
        Line1.setBounds(300, 152, 170, 20);

        promotLabel.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 48)); // NOI18N
        promotLabel.setForeground(new java.awt.Color(235, 94, 145));
        promotLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        promotLabel.setText("Company name... ");
        LoginPanel2.add(promotLabel);
        promotLabel.setBounds(70, 10, 750, 100);

        promotLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        promotLabel2.setForeground(new java.awt.Color(0, 0, 51));
        promotLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        promotLabel2.setText("Address...");
        LoginPanel2.add(promotLabel2);
        promotLabel2.setBounds(70, 140, 800, 100);

        promotLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        promotLabel3.setForeground(new java.awt.Color(0, 0, 51));
        promotLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        promotLabel3.setText("Email...");
        LoginPanel2.add(promotLabel3);
        promotLabel3.setBounds(70, 240, 800, 100);

        AdminText.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        AdminText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        AdminText.setText("Adminstrator:");
        LoginPanel2.add(AdminText);
        AdminText.setBounds(30, 410, 190, 50);

        PasswordText.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        PasswordText.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        PasswordText.setText("Password:");
        LoginPanel2.add(PasswordText);
        PasswordText.setBounds(30, 480, 190, 50);

        AdminField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        LoginPanel2.add(AdminField);
        AdminField.setBounds(240, 420, 310, 30);

        PasswordField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        PasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PasswordFieldKeyPressed(evt);
            }
        });
        LoginPanel2.add(PasswordField);
        PasswordField.setBounds(240, 490, 310, 30);

        loginButton.setBackground(new java.awt.Color(51, 0, 51));
        loginButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        loginButton.setForeground(new java.awt.Color(255, 255, 255));
        loginButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/login-button.png"))); // NOI18N
        loginButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loginButton.setIconTextGap(2);
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });
        LoginPanel2.add(loginButton);
        loginButton.setBounds(340, 540, 80, 40);

        comNameLabel.setBackground(new java.awt.Color(255, 255, 255));
        comNameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        comNameLabel.setForeground(new java.awt.Color(255, 0, 102));
        comNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        comNameLabel.setText("Company name");
        LoginPanel2.add(comNameLabel);
        comNameLabel.setBounds(70, 210, 140, 30);

        comAddLabel.setBackground(new java.awt.Color(255, 255, 255));
        comAddLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        comAddLabel.setForeground(new java.awt.Color(255, 0, 102));
        comAddLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        comAddLabel.setText("Address");
        LoginPanel2.add(comAddLabel);
        comAddLabel.setBounds(70, 270, 140, 30);

        comemailLabel.setBackground(new java.awt.Color(255, 255, 255));
        comemailLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        comemailLabel.setForeground(new java.awt.Color(255, 0, 102));
        comemailLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        comemailLabel.setText("Website/Email");
        LoginPanel2.add(comemailLabel);
        comemailLabel.setBounds(70, 330, 140, 30);

        comNameField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        LoginPanel2.add(comNameField);
        comNameField.setBounds(240, 210, 310, 30);

        comAddField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        LoginPanel2.add(comAddField);
        comAddField.setBounds(240, 270, 310, 30);

        comwebField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        LoginPanel2.add(comwebField);
        comwebField.setBounds(240, 330, 310, 30);

        SignUpButton.setBackground(new java.awt.Color(51, 0, 51));
        SignUpButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SignUpButton.setForeground(new java.awt.Color(255, 255, 255));
        SignUpButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/SIGNup_1.png"))); // NOI18N
        SignUpButton.setBorder(new javax.swing.border.SoftBevelBorder(0));
        SignUpButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SignUpButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        SignUpButton.setIconTextGap(2);
        SignUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpButtonActionPerformed(evt);
            }
        });
        LoginPanel2.add(SignUpButton);
        SignUpButton.setBounds(450, 540, 100, 40);

        backToLogin.setForeground(new java.awt.Color(153, 255, 255));
        backToLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        backToLogin.setText("Return to Login?");
        backToLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backToLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backToLoginMouseClicked(evt);
            }
        });
        LoginPanel2.add(backToLogin);
        backToLogin.setBounds(750, 610, 130, 30);

        colorBackground2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/background.png"))); // NOI18N
        LoginPanel2.add(colorBackground2);
        colorBackground2.setBounds(0, 0, 900, 650);

        mainPanel.add(LoginPanel2);
        LoginPanel2.setBounds(0, 0, 900, 650);

        insertPanel.setBackground(new java.awt.Color(255, 255, 255));
        insertPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        insertPanel.setLayout(null);

        nameLabel.setBackground(new java.awt.Color(255, 255, 255));
        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(51, 207, 248));
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nameLabel.setText("Name");
        insertPanel.add(nameLabel);
        nameLabel.setBounds(70, 60, 160, 30);

        sexLabel.setBackground(new java.awt.Color(255, 255, 255));
        sexLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sexLabel.setForeground(new java.awt.Color(51, 207, 248));
        sexLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sexLabel.setText("Sex");
        insertPanel.add(sexLabel);
        sexLabel.setBounds(70, 120, 160, 30);

        radioMale.setBackground(new java.awt.Color(255, 255, 255));
        radioMale.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        radioMale.setForeground(new java.awt.Color(0, 102, 102));
        radioMale.setText("Male");
        insertPanel.add(radioMale);
        radioMale.setBounds(310, 120, 107, 25);

        radioFemale.setBackground(new java.awt.Color(255, 255, 255));
        radioFemale.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        radioFemale.setForeground(new java.awt.Color(0, 102, 102));
        radioFemale.setText("Female");
        insertPanel.add(radioFemale);
        radioFemale.setBounds(460, 120, 107, 25);

        ageLabel.setBackground(new java.awt.Color(255, 255, 255));
        ageLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ageLabel.setForeground(new java.awt.Color(51, 207, 248));
        ageLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ageLabel.setText("Age");
        insertPanel.add(ageLabel);
        ageLabel.setBounds(70, 170, 160, 30);

        addLabel.setBackground(new java.awt.Color(255, 255, 255));
        addLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addLabel.setForeground(new java.awt.Color(51, 207, 248));
        addLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        addLabel.setText("Address");
        insertPanel.add(addLabel);
        addLabel.setBounds(70, 220, 160, 30);

        phoneLabel.setBackground(new java.awt.Color(255, 255, 255));
        phoneLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        phoneLabel.setForeground(new java.awt.Color(51, 207, 248));
        phoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        phoneLabel.setText("Phone No");
        insertPanel.add(phoneLabel);
        phoneLabel.setBounds(70, 270, 160, 30);

        jobLabel.setBackground(new java.awt.Color(255, 255, 255));
        jobLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jobLabel.setForeground(new java.awt.Color(51, 207, 248));
        jobLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jobLabel.setText("Job Type");
        insertPanel.add(jobLabel);
        jobLabel.setBounds(70, 320, 160, 30);

        rangeLabel1.setBackground(new java.awt.Color(255, 255, 255));
        rangeLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rangeLabel1.setForeground(new java.awt.Color(51, 207, 248));
        rangeLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        rangeLabel1.setText("Pay Range(cash per hr)");
        insertPanel.add(rangeLabel1);
        rangeLabel1.setBounds(10, 370, 220, 30);

        hourLabel.setBackground(new java.awt.Color(255, 255, 255));
        hourLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        hourLabel.setForeground(new java.awt.Color(51, 207, 248));
        hourLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hourLabel.setText("Work Hour in a day");
        insertPanel.add(hourLabel);
        hourLabel.setBounds(30, 420, 200, 30);

        nameField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        insertPanel.add(nameField);
        nameField.setBounds(310, 60, 270, 30);

        ageField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        insertPanel.add(ageField);
        ageField.setBounds(310, 170, 50, 30);

        addField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        insertPanel.add(addField);
        addField.setBounds(310, 220, 270, 30);

        phoneField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        insertPanel.add(phoneField);
        phoneField.setBounds(310, 270, 270, 30);

        jobField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        insertPanel.add(jobField);
        jobField.setBounds(310, 320, 270, 30);

        hourField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        hourField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hourFieldActionPerformed(evt);
            }
        });
        insertPanel.add(hourField);
        hourField.setBounds(310, 420, 270, 30);

        clearButton.setBackground(new java.awt.Color(255, 255, 255));
        clearButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        insertPanel.add(clearButton);
        clearButton.setBounds(710, 550, 90, 40);

        insertButton.setBackground(new java.awt.Color(255, 255, 255));
        insertButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        insertButton.setText("Insert");
        insertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButtonActionPerformed(evt);
            }
        });
        insertPanel.add(insertButton);
        insertButton.setBounds(600, 550, 90, 40);

        comboBox1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        comboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "80", "79", "78", "77", "76", "75", "74", "73", "72", "71", "69", "68", "67", "66", "65", "64", "63", "62", "61", "60", "59", "58", "57", "56", "55", "54", "53", "52", "51", "50", "49", "48", "47", "46", "45", "44", "43", "42", "41", "40", "39", "38", "37", "36", "35", "34", "33", "32", "31", "30", "29", "28", "27", "26", "25", "24", "23", "22", "21", "20", "19", "18", "17", "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", "6", "5", "4", "3", "2" }));
        insertPanel.add(comboBox1);
        comboBox1.setBounds(310, 370, 170, 30);

        insertInfoLabel.setBackground(new java.awt.Color(255, 255, 255));
        insertInfoLabel.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        insertInfoLabel.setText("provide all the data fields");
        insertPanel.add(insertInfoLabel);
        insertInfoLabel.setBounds(200, 616, 350, 30);

        mainPanel.add(insertPanel);
        insertPanel.setBounds(0, 0, 900, 650);

        searchPanel.setBackground(new java.awt.Color(255, 255, 255));
        searchPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchPanel.setMinimumSize(new java.awt.Dimension(900, 620));
        searchPanel.setPreferredSize(new java.awt.Dimension(900, 620));
        searchPanel.setLayout(null);

        Another.setFont(new java.awt.Font("Source Sans Pro Semibold", 0, 18)); // NOI18N
        Another.setForeground(new java.awt.Color(198, 118, 118));
        Another.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Another.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AnotherMouseClicked(evt);
            }
        });
        searchPanel.add(Another);
        Another.setBounds(450, 600, 430, 30);

        searchLabel.setBackground(new java.awt.Color(255, 255, 255));
        searchLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        searchLabel.setForeground(new java.awt.Color(51, 207, 248));
        searchLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        searchLabel.setText("Provide name");
        searchPanel.add(searchLabel);
        searchLabel.setBounds(110, 90, 160, 30);

        searchField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchFieldKeyPressed(evt);
            }
        });
        searchPanel.add(searchField);
        searchField.setBounds(310, 90, 270, 30);

        searchButton.setBackground(new java.awt.Color(255, 255, 255));
        searchButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        searchPanel.add(searchButton);
        searchButton.setBounds(630, 90, 90, 30);

        searchLabel2.setBackground(new java.awt.Color(255, 255, 255));
        searchLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        searchLabel2.setForeground(new java.awt.Color(51, 207, 248));
        searchLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        searchLabel2.setText("Name");
        searchPanel.add(searchLabel2);
        searchLabel2.setBounds(70, 240, 160, 30);

        searchLabel3.setBackground(new java.awt.Color(255, 255, 255));
        searchLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        searchLabel3.setForeground(new java.awt.Color(51, 207, 248));
        searchLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        searchLabel3.setText("Sex");
        searchPanel.add(searchLabel3);
        searchLabel3.setBounds(70, 300, 160, 30);

        searchLabel4.setBackground(new java.awt.Color(255, 255, 255));
        searchLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        searchLabel4.setForeground(new java.awt.Color(51, 207, 248));
        searchLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        searchLabel4.setText("Job Type");
        searchPanel.add(searchLabel4);
        searchLabel4.setBounds(70, 370, 160, 30);

        searchLabel5.setBackground(new java.awt.Color(255, 255, 255));
        searchLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        searchLabel5.setForeground(new java.awt.Color(51, 207, 248));
        searchLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        searchLabel5.setText("Address");
        searchPanel.add(searchLabel5);
        searchLabel5.setBounds(70, 450, 160, 30);

        searchLabel6.setBackground(new java.awt.Color(255, 255, 255));
        searchLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        searchLabel6.setForeground(new java.awt.Color(51, 207, 248));
        searchLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        searchLabel6.setText("Salary");
        searchPanel.add(searchLabel6);
        searchLabel6.setBounds(70, 520, 160, 30);

        displayNameLabel.setBackground(new java.awt.Color(255, 255, 255));
        displayNameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayNameLabel.setForeground(new java.awt.Color(0, 51, 51));
        displayNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        searchPanel.add(displayNameLabel);
        displayNameLabel.setBounds(310, 240, 340, 30);

        displaySexLabel.setBackground(new java.awt.Color(255, 255, 255));
        displaySexLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displaySexLabel.setForeground(new java.awt.Color(0, 51, 51));
        displaySexLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        searchPanel.add(displaySexLabel);
        displaySexLabel.setBounds(310, 300, 340, 30);

        displayJobLabel.setBackground(new java.awt.Color(255, 255, 255));
        displayJobLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayJobLabel.setForeground(new java.awt.Color(0, 51, 51));
        displayJobLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        searchPanel.add(displayJobLabel);
        displayJobLabel.setBounds(310, 370, 340, 30);

        displayAddressLabel.setBackground(new java.awt.Color(255, 255, 255));
        displayAddressLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displayAddressLabel.setForeground(new java.awt.Color(0, 51, 51));
        displayAddressLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        searchPanel.add(displayAddressLabel);
        displayAddressLabel.setBounds(310, 450, 340, 30);

        displaySalaryLabel.setBackground(new java.awt.Color(255, 255, 255));
        displaySalaryLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        displaySalaryLabel.setForeground(new java.awt.Color(0, 51, 51));
        displaySalaryLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        searchPanel.add(displaySalaryLabel);
        displaySalaryLabel.setBounds(310, 520, 330, 30);

        mainPanel.add(searchPanel);
        searchPanel.setBounds(0, 0, 900, 650);

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane2.setAutoscrolls(true);
        jScrollPane2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        deleteTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        deleteTable.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        deleteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Sex", "Address", "Job", "Salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        deleteTable.setRowHeight(25);
        deleteTable.setSelectionBackground(new java.awt.Color(255, 207, 240));
        deleteTable.setSelectionForeground(new java.awt.Color(51, 0, 51));
        deleteTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteTableMouseClicked(evt);
            }
        });
        deleteTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                deleteTableKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(deleteTable);

        mainPanel.add(jScrollPane2);
        jScrollPane2.setBounds(0, 0, 900, 490);

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jScrollPane3.setAutoscrolls(true);
        jScrollPane3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        updateTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        updateTable.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        updateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Sex", "Address", "Job", "Salary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        updateTable.setRowHeight(25);
        updateTable.setSelectionBackground(new java.awt.Color(255, 207, 240));
        updateTable.setSelectionForeground(new java.awt.Color(51, 0, 51));
        updateTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(updateTable);

        mainPanel.add(jScrollPane3);
        jScrollPane3.setBounds(0, 0, 900, 330);

        incentivePanel.setBackground(new java.awt.Color(255, 255, 255));
        incentivePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        incentivePanel.setLayout(null);

        amountLable.setBackground(new java.awt.Color(255, 255, 255));
        amountLable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        amountLable.setForeground(new java.awt.Color(51, 207, 248));
        amountLable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        amountLable.setText("Amount");
        incentivePanel.add(amountLable);
        amountLable.setBounds(50, 200, 80, 40);

        amountField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        incentivePanel.add(amountField);
        amountField.setBounds(190, 200, 250, 30);

        payButton.setBackground(new java.awt.Color(255, 255, 255));
        payButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        payButton.setText("Pay");
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });
        incentivePanel.add(payButton);
        payButton.setBounds(480, 270, 90, 40);

        comboBox3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        incentivePanel.add(comboBox3);
        comboBox3.setBounds(190, 140, 380, 30);

        IncentiveName.setBackground(new java.awt.Color(255, 255, 255));
        IncentiveName.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        IncentiveName.setForeground(new java.awt.Color(51, 207, 248));
        IncentiveName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        IncentiveName.setText("Name");
        incentivePanel.add(IncentiveName);
        IncentiveName.setBounds(50, 130, 80, 40);

        IncentiveLable.setBackground(new java.awt.Color(255, 255, 255));
        IncentiveLable.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        IncentiveLable.setForeground(new java.awt.Color(51, 207, 248));
        IncentiveLable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        IncentiveLable.setText("Pay Incentive");
        incentivePanel.add(IncentiveLable);
        IncentiveLable.setBounds(240, 30, 370, 40);

        Line3.setForeground(new java.awt.Color(255, 51, 102));
        incentivePanel.add(Line3);
        Line3.setBounds(300, 82, 260, 10);

        incentiveList.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jScrollPane5.setViewportView(incentiveList);

        incentivePanel.add(jScrollPane5);
        jScrollPane5.setBounds(50, 390, 720, 230);

        paidEmployees.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        paidEmployees.setForeground(new java.awt.Color(51, 207, 248));
        paidEmployees.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        paidEmployees.setText("check all paid incentives this month");
        paidEmployees.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        paidEmployees.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        paidEmployees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paidEmployeesMouseClicked(evt);
            }
        });
        incentivePanel.add(paidEmployees);
        paidEmployees.setBounds(590, 336, 290, 30);

        mainPanel.add(incentivePanel);
        incentivePanel.setBounds(0, 0, 900, 650);

        JobList.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        JobList.setForeground(new java.awt.Color(235, 94, 145));
        JobList.setSelectionBackground(new java.awt.Color(255, 255, 255));
        JobList.setSelectionForeground(new java.awt.Color(235, 94, 145));
        jScrollPane4.setViewportView(JobList);

        mainPanel.add(jScrollPane4);
        jScrollPane4.setBounds(70, 410, 710, 220);

        deleteInfoLabel.setBackground(new java.awt.Color(255, 255, 255));
        deleteInfoLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteInfoLabel.setForeground(new java.awt.Color(0, 51, 51));
        deleteInfoLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        deleteInfoLabel.setText("select from the tabel");
        mainPanel.add(deleteInfoLabel);
        deleteInfoLabel.setBounds(170, 560, 340, 30);

        deleteButton.setBackground(new java.awt.Color(255, 255, 255));
        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        mainPanel.add(deleteButton);
        deleteButton.setBounds(50, 560, 80, 40);

        updateButton.setBackground(new java.awt.Color(255, 255, 255));
        updateButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        mainPanel.add(updateButton);
        updateButton.setBounds(720, 570, 90, 40);

        updatecancleBut.setBackground(new java.awt.Color(255, 255, 255));
        updatecancleBut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        updatecancleBut.setText("cancle");
        updatecancleBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatecancleButActionPerformed(evt);
            }
        });
        mainPanel.add(updatecancleBut);
        updatecancleBut.setBounds(611, 570, 80, 40);

        upNameLable.setBackground(new java.awt.Color(255, 255, 255));
        upNameLable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        upNameLable.setForeground(new java.awt.Color(51, 207, 248));
        upNameLable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        upNameLable.setText("Name");
        mainPanel.add(upNameLable);
        upNameLable.setBounds(20, 380, 120, 30);

        upSexLable.setBackground(new java.awt.Color(255, 255, 255));
        upSexLable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        upSexLable.setForeground(new java.awt.Color(51, 207, 248));
        upSexLable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        upSexLable.setText("Sex");
        mainPanel.add(upSexLable);
        upSexLable.setBounds(30, 430, 110, 20);

        upRadioMale.setBackground(new java.awt.Color(255, 255, 255));
        upRadioMale.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        upRadioMale.setForeground(new java.awt.Color(0, 102, 102));
        upRadioMale.setText("Male");
        mainPanel.add(upRadioMale);
        upRadioMale.setBounds(160, 430, 60, 20);

        upRadioFemale.setBackground(new java.awt.Color(255, 255, 255));
        upRadioFemale.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        upRadioFemale.setForeground(new java.awt.Color(0, 102, 102));
        upRadioFemale.setText("Female");
        mainPanel.add(upRadioFemale);
        upRadioFemale.setBounds(240, 430, 80, 20);

        upAgeLable.setBackground(new java.awt.Color(255, 255, 255));
        upAgeLable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        upAgeLable.setForeground(new java.awt.Color(51, 207, 248));
        upAgeLable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        upAgeLable.setText("Age");
        mainPanel.add(upAgeLable);
        upAgeLable.setBounds(30, 470, 110, 30);

        upJobLable.setBackground(new java.awt.Color(255, 255, 255));
        upJobLable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        upJobLable.setForeground(new java.awt.Color(51, 207, 248));
        upJobLable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        upJobLable.setText("Job Type");
        mainPanel.add(upJobLable);
        upJobLable.setBounds(30, 520, 110, 30);

        upHourLable.setBackground(new java.awt.Color(255, 255, 255));
        upHourLable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        upHourLable.setForeground(new java.awt.Color(51, 207, 248));
        upHourLable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        upHourLable.setText("Work Hour");
        mainPanel.add(upHourLable);
        upHourLable.setBounds(30, 570, 110, 30);

        upAddressLable.setBackground(new java.awt.Color(255, 255, 255));
        upAddressLable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        upAddressLable.setForeground(new java.awt.Color(51, 207, 248));
        upAddressLable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        upAddressLable.setText("Address");
        mainPanel.add(upAddressLable);
        upAddressLable.setBounds(490, 380, 110, 30);

        upRangeLable.setBackground(new java.awt.Color(255, 255, 255));
        upRangeLable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        upRangeLable.setForeground(new java.awt.Color(51, 207, 248));
        upRangeLable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        upRangeLable.setText("Pay Range");
        mainPanel.add(upRangeLable);
        upRangeLable.setBounds(490, 430, 110, 30);

        upPhoneLable.setBackground(new java.awt.Color(255, 255, 255));
        upPhoneLable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        upPhoneLable.setForeground(new java.awt.Color(51, 207, 248));
        upPhoneLable.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        upPhoneLable.setText("Phone No");
        mainPanel.add(upPhoneLable);
        upPhoneLable.setBounds(480, 480, 120, 30);

        upNameField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        mainPanel.add(upNameField);
        upNameField.setBounds(160, 380, 220, 30);

        upAgeField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        mainPanel.add(upAgeField);
        upAgeField.setBounds(160, 470, 220, 30);

        upJobField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        mainPanel.add(upJobField);
        upJobField.setBounds(160, 520, 220, 30);

        upHourField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        mainPanel.add(upHourField);
        upHourField.setBounds(160, 570, 220, 30);

        upAddField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        mainPanel.add(upAddField);
        upAddField.setBounds(630, 380, 170, 30);

        upPhoneField.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        mainPanel.add(upPhoneField);
        upPhoneField.setBounds(630, 480, 170, 30);

        comboBox2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        comboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "80", "79", "78", "77", "76", "75", "74", "73", "72", "71", "69", "68", "67", "66", "65", "64", "63", "62", "61", "60", "59", "58", "57", "56", "55", "54", "53", "52", "51", "50", "49", "48", "47", "46", "45", "44", "43", "42", "41", "40", "39", "38", "37", "36", "35", "34", "33", "32", "31", "30", "29", "28", "27", "26", "25", "24", "23", "22", "21", "20", "19", "18", "17", "16", "15", "14", "13", "12", "11", "10", "9", "8", "7", "6", "5", "4", "3", "2" }));
        mainPanel.add(comboBox2);
        comboBox2.setBounds(650, 432, 150, 30);

        updateInfoLabel.setBackground(new java.awt.Color(255, 255, 255));
        updateInfoLabel.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        updateInfoLabel.setText("Select row to update ");
        mainPanel.add(updateInfoLabel);
        updateInfoLabel.setBounds(200, 616, 350, 30);

        moreDisplayBut.setBackground(new java.awt.Color(255, 255, 255));
        moreDisplayBut.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        moreDisplayBut.setText("More");
        moreDisplayBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moreDisplayButActionPerformed(evt);
            }
        });
        mainPanel.add(moreDisplayBut);
        moreDisplayBut.setBounds(810, 605, 65, 40);

        FormatButton.setBackground(new java.awt.Color(255, 204, 204));
        FormatButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        FormatButton.setText("Format");
        FormatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FormatButtonActionPerformed(evt);
            }
        });
        mainPanel.add(FormatButton);
        FormatButton.setBounds(800, 595, 77, 40);

        NamePromotion.setBackground(new java.awt.Color(255, 255, 255));
        NamePromotion.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 48)); // NOI18N
        NamePromotion.setForeground(new java.awt.Color(235, 94, 145));
        NamePromotion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NamePromotion.setText("Company name... ");
        mainPanel.add(NamePromotion);
        NamePromotion.setBounds(50, 40, 750, 70);

        EmployeeNoLabel.setBackground(new java.awt.Color(255, 255, 255));
        EmployeeNoLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        EmployeeNoLabel.setForeground(new java.awt.Color(235, 94, 145));
        EmployeeNoLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        EmployeeNoLabel.setText("Total number of Employee");
        mainPanel.add(EmployeeNoLabel);
        EmployeeNoLabel.setBounds(30, 180, 750, 60);

        Line2.setForeground(new java.awt.Color(0, 0, 0));
        mainPanel.add(Line2);
        Line2.setBounds(210, 360, 370, 10);

        WorkerNoLabel.setBackground(new java.awt.Color(255, 255, 255));
        WorkerNoLabel.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        WorkerNoLabel.setForeground(new java.awt.Color(235, 94, 145));
        WorkerNoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WorkerNoLabel.setText("Number of Employee in each work section");
        mainPanel.add(WorkerNoLabel);
        WorkerNoLabel.setBounds(30, 310, 750, 40);

        choicePanel.setBackground(new java.awt.Color(236, 236, 236));
        choicePanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        choicePanel.setLayout(null);

        LoginPanel.setBackground(new java.awt.Color(255, 102, 102));
        LoginPanel.setLayout(null);

        iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/login.png"))); // NOI18N
        iconLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        iconLabel.setIconTextGap(0);
        LoginPanel.add(iconLabel);
        iconLabel.setBounds(-20, 140, 300, 320);

        colorbackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/background.png"))); // NOI18N
        LoginPanel.add(colorbackground);
        colorbackground.setBounds(0, 0, 280, 650);

        choicePanel.add(LoginPanel);
        LoginPanel.setBounds(0, 0, 280, 650);

        appLabel.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        appLabel.setForeground(new java.awt.Color(102, 195, 245));
        appLabel.setText("    Employee Data");
        choicePanel.add(appLabel);
        appLabel.setBounds(0, 40, 280, 50);

        appLabel2.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        appLabel2.setForeground(new java.awt.Color(102, 195, 245));
        appLabel2.setText("System");
        choicePanel.add(appLabel2);
        appLabel2.setBounds(90, 80, 140, 50);

        homeTab.setBackground(new java.awt.Color(204, 204, 255));
        homeTab.setFont(new java.awt.Font("Mongolian Baiti", 1, 18)); // NOI18N
        homeTab.setForeground(new java.awt.Color(155, 102, 95));
        homeTab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        homeTab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/home.png"))); // NOI18N
        homeTab.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        homeTab.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        homeTab.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        homeTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeTabMouseClicked(evt);
            }
        });
        choicePanel.add(homeTab);
        homeTab.setBounds(0, 190, 280, 50);

        insertTab.setBackground(new java.awt.Color(204, 204, 255));
        insertTab.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        insertTab.setForeground(new java.awt.Color(255, 255, 255));
        insertTab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        insertTab.setText("Insert");
        insertTab.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        insertTab.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        insertTab.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        insertTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insertTabMouseClicked(evt);
            }
        });
        choicePanel.add(insertTab);
        insertTab.setBounds(0, 240, 280, 50);

        displayTab.setBackground(new java.awt.Color(204, 204, 255));
        displayTab.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        displayTab.setForeground(new java.awt.Color(255, 255, 255));
        displayTab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        displayTab.setText("Display");
        displayTab.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        displayTab.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        displayTab.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        displayTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayTabMouseClicked(evt);
            }
        });
        choicePanel.add(displayTab);
        displayTab.setBounds(0, 290, 280, 50);

        searchTab.setBackground(new java.awt.Color(204, 204, 255));
        searchTab.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        searchTab.setForeground(new java.awt.Color(255, 255, 255));
        searchTab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchTab.setText("Search");
        searchTab.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        searchTab.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchTab.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTabMouseClicked(evt);
            }
        });
        choicePanel.add(searchTab);
        searchTab.setBounds(0, 340, 280, 50);

        deleteTab.setBackground(new java.awt.Color(204, 204, 255));
        deleteTab.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        deleteTab.setForeground(new java.awt.Color(255, 255, 255));
        deleteTab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteTab.setText("Delete");
        deleteTab.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        deleteTab.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteTab.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteTabMouseClicked(evt);
            }
        });
        choicePanel.add(deleteTab);
        deleteTab.setBounds(0, 390, 280, 50);

        modifyTab.setBackground(new java.awt.Color(204, 204, 255));
        modifyTab.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        modifyTab.setForeground(new java.awt.Color(255, 255, 255));
        modifyTab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        modifyTab.setText("Modify");
        modifyTab.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        modifyTab.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        modifyTab.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        modifyTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modifyTabMouseClicked(evt);
            }
        });
        choicePanel.add(modifyTab);
        modifyTab.setBounds(0, 440, 280, 50);

        sortTab.setBackground(new java.awt.Color(153, 255, 255));
        sortTab.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        sortTab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sortTab.setText("Sort Table");
        sortTab.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        sortTab.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sortTab.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sortTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sortTabMouseClicked(evt);
            }
        });
        choicePanel.add(sortTab);
        sortTab.setBounds(0, 490, 280, 50);

        appLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/background.png"))); // NOI18N
        choicePanel.add(appLabel3);
        appLabel3.setBounds(0, 0, 280, 190);

        ResetLabel.setBackground(new java.awt.Color(204, 255, 255));
        ResetLabel.setForeground(new java.awt.Color(204, 255, 255));
        ResetLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ResetLabel.setText("Do you want to reset company Information?");
        ResetLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ResetLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResetLabelMouseClicked(evt);
            }
        });
        choicePanel.add(ResetLabel);
        ResetLabel.setBounds(0, 620, 280, 30);

        IncentiveTab.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        IncentiveTab.setForeground(new java.awt.Color(255, 153, 153));
        IncentiveTab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/add.png"))); // NOI18N
        IncentiveTab.setText("Incentives");
        IncentiveTab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        IncentiveTab.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        IncentiveTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IncentiveTabMouseClicked(evt);
            }
        });
        choicePanel.add(IncentiveTab);
        IncentiveTab.setBounds(0, 540, 160, 40);

        appLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/background.png"))); // NOI18N
        choicePanel.add(appLabel4);
        appLabel4.setBounds(0, 190, 280, 470);

        tabPanel.setBackground(new java.awt.Color(255, 255, 255));
        tabPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabPanel.setLayout(null);

        closeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/closei.png"))); // NOI18N
        closeLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeLabelMouseClicked(evt);
            }
        });
        tabPanel.add(closeLabel);
        closeLabel.setBounds(1150, 0, 30, 30);

        minimizeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minimizeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/minimize.png"))); // NOI18N
        minimizeLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimizeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeLabelMouseClicked(evt);
            }
        });
        tabPanel.add(minimizeLabel);
        minimizeLabel.setBounds(1120, 0, 20, 30);

        titleLabel.setBackground(new java.awt.Color(154, 196, 250));
        titleLabel.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/script.png"))); // NOI18N
        titleLabel.setText("Employee DataSystem");
        titleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        titleLabel.setIconTextGap(5);
        tabPanel.add(titleLabel);
        titleLabel.setBounds(10, 0, 400, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(choicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(tabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1180, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(choicePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /*
     to get Data from different Field
    */
    private String name ="";
    private String sex ="";
    private String age ="";
    private String address ="";
    private String phoneNo =""; 
    private String jobType ="";
    private String payRange ="";
    private String workHour =""; 
    private String date = "";
    private int personCounter;
   
    private ArrayList<String> list;      //a container list for general purpose
    private Employee employee;           //declaring instance of external class for general use
    private EmployeeIncentive incentive; //declaring EmployeeIncentive object
    
    
    private void Buttongrouping(){
       //Grouping radio buttons  
          buttonGroup1.add(radioMale);
          radioMale.setSelected(true);
          buttonGroup1.add(radioFemale);
          buttonGroup2.add(upRadioMale);
          upRadioMale.setSelected(true);
          buttonGroup2.add(upRadioFemale);
       
    }
    
    private void panelModifier(String key){
        switch(key){
            case "all":
                insertPanel.setVisible(false);    //hide insert page 
                searchPanel.setVisible(false);    //hide search page 
                jScrollPane1.setVisible(false);   //hide display table
                jScrollPane2.setVisible(false);   //hide deletion table
                jScrollPane3.setVisible(false);   //hide update table 
                incentivePanel.setVisible(false); //hide incentive panel
                VisibleHome(false);               //hide homepage
                sortTab.setVisible(false);        //hide sort tab
                visibelButton("delete", false);   //hide elements on main panel used for deletion
                visibelButton("display", false);  //hide elements on main panel used for display
                visibelButton("modify", false);   //hide elements on main panel used for update process
              break;
            case "insert":
                insertPanel.setVisible(true);  //unhide insert panel
                break;
            case "display":
                jScrollPane1.setVisible(true); //unhide display panel
                break;
            case "search":
                searchPanel.setVisible(true);  //unhide search panel
                break;
            case "delete":
                jScrollPane2.setVisible(true); //unhide deletion panel
                break;
            case "modify":
                jScrollPane3.setVisible(true); //unhide modification panel
                break;
            case "incentive":
                incentivePanel.setVisible(true); //unhide incentive panel
                break;
            default:
                break;
        }
    }
    
    private void VisibleHome(boolean key){
      int counter=0;                                                                   //holds total number of employees
      DefaultListModel<String> listModel = new DefaultListModel<>();                   //get the model of the list to add elements
      String temp = titleLabel.getText().replaceFirst("\'s Employee DataSystem", "");
          NamePromotion.setVisible(key);
          EmployeeNoLabel.setVisible(key);
          WorkerNoLabel.setVisible(key);
          jScrollPane4.setVisible(key);
          Line2.setVisible(key);
         //if the home page is visible
        if(NamePromotion.isVisible()){ 
            try {
               employee = new Employee(); 
               counter = employee.EmployeeSize();  //get total employee number from text
               list = employee.filterByjob();     //filtered jobTypes in arraylist
               for(String x: list){
                 listModel.addElement(x);        //fill the JList 
               } 
             }catch (FileNotFoundException ex) {
                //handling IO error 
               JOptionPane.showMessageDialog(null, "Data Reading Error","Error",JOptionPane.ERROR_MESSAGE); 
             }catch (IndexOutOfBoundsException ex){
                //handle if the list is empty 
               JOptionPane.showMessageDialog(null, "No Employees"); 
             }finally{
               NamePromotion.setText(temp);
               EmployeeNoLabel.setText("Total Number of Employee"+"      " + String.valueOf(counter));
               JobList.setModel(listModel); 
             } 
        } 
        
        
     }
    
    private void visibleChoicePanel(boolean value){
      /*Hide or Unhide based on the given boolean value*/
         appLabel.setVisible(value);
         appLabel2.setVisible(value);
         appLabel3.setVisible(value);
         appLabel4.setVisible(value);
         homeTab.setVisible(value);
         insertTab.setVisible(value);
         displayTab.setVisible(value);
         searchTab.setVisible(value);
         deleteTab.setVisible(value);
         modifyTab.setVisible(value);
         ResetLabel.setVisible(value);
    
    }
    
    private void visibelButton(String key, boolean value){
        /*Hide or Unhide elements on the Mainpanel
         based on the given panel name and boolean value
        */
        switch(key){
            case "delete":
                deleteButton.setVisible(value);
                deleteInfoLabel.setVisible(value);
                FormatButton.setVisible(value);
              break;
            case "modify":
                updateButton.setVisible(value); updatecancleBut.setVisible(value);
                upNameField.setVisible(value);  upAgeField.setVisible(value);
                upJobField.setVisible(value);   upHourField.setVisible(value);
                upAddField.setVisible(value);   upPhoneField.setVisible(value);
                comboBox2.setVisible(value);    upRadioFemale.setVisible(value);
                upRadioMale.setVisible(value);  updateInfoLabel.setVisible(value); 
                upNameLable.setVisible(value);  upSexLable.setVisible(value);
                upAgeLable.setVisible(value);   upJobLable.setVisible(value);
                upHourLable.setVisible(value);  upAddressLable.setVisible(value);
                upRangeLable.setVisible(value); upPhoneLable.setVisible(value);
              break;
            case "display":
                moreDisplayBut.setVisible(value);
              break;  
            default:
              break;  
                
        }
    }
    
    private void loginVisibility(String key){
      /*Managing the Login and Signup pages*/  
        if(key.equals("login")){
            comNameLabel.setVisible(false);
            comAddLabel.setVisible(false);
            comemailLabel.setVisible(false);
            comNameField.setVisible(false);
            comAddField.setVisible(false);
            comwebField.setVisible(false);
            signupText.setVisible(false);
            Line1.setVisible(false);
            SignUpButton.setVisible(false);
            backToLogin.setVisible(false);
            promotLabel.setVisible(true);
            promotLabel2.setVisible(true);
            promotLabel3.setVisible(true);
            loginButton.setVisible(true);
            iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/login.png")));
          
          }
         if(key.equals("signup")){
            promotLabel.setVisible(false);
            promotLabel2.setVisible(false);
            promotLabel3.setVisible(false);
            loginButton.setVisible(false);
            ResetLabel.setVisible(false);
            backToLogin.setVisible(false);
            comNameLabel.setVisible(true);
            comAddLabel.setVisible(true);
            comemailLabel.setVisible(true);
            comNameField.setVisible(true);
            comAddField.setVisible(true);
            comwebField.setVisible(true);
            SignUpButton.setVisible(true);
            signupText.setVisible(true);
            Line1.setVisible(true);
            comNameField.setText("");
            comAddField.setText("");
            comwebField.setText("");
            iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/signup.png")));
          }
    }
    
    private void buttonBackModifier(String key){
      /*Creating simple animation when choiceTabs are clicked
        by changing backgroundColors  
      */ 
        switch(key){
            case "home":
                homeTab.setBackground(Color.BLACK);
                break;
            case "insert":
                insertTab.setBackground(Color.BLACK);
                break;
            case "display":
                displayTab.setBackground(Color.BLACK);
                break; 
            case "search":
                searchTab.setBackground(Color.BLACK);
                break; 
            case "delete":
                deleteTab.setBackground(Color.BLACK);
                break; 
            case "modify":
                modifyTab.setBackground(Color.BLACK);
                break;  
            default:
                break;
        }
    }
    
    private void defaultButtonBack(){
       //reset choiceTabs backgroundColor to default  
        homeTab.setBackground(new java.awt.Color(204,204,255));
        insertTab.setBackground(new java.awt.Color(204,204,255));
        displayTab.setBackground(new java.awt.Color(204,204,255));
        searchTab.setBackground(new java.awt.Color(204,204,255));
        deleteTab.setBackground(new java.awt.Color(204,204,255));
        modifyTab.setBackground(new java.awt.Color(204,204,255));
    }
    
    private void loginPage() throws FileNotFoundException, IOException{
      employee = new Employee();
      if(employee.getInformation().isEmpty() || employee.getPassword().isEmpty()){
          loginVisibility("signup");
          //only if there is no data stored
      }
      else{
          String[] information = employee.getInformation().split(",");  //read Info from Text
            /*print Information and promt to Login*/
          titleLabel.setText(information[0]+"'s"+" "+titleLabel.getText());
          promotLabel.setText(information[0]);
          promotLabel2.setText("Address:  "+ information[1]);
          promotLabel3.setText("Website:  "+ information[2]);
          loginVisibility("login");
          iconLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fraol/project/login.png")));
       }
    }
    
    private void cleanTabel(JTable table){
         /*Table cleaner not to write again on existing model*/ 
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int rowCount = table.getRowCount();
          if(rowCount > 0){
            for(int i=rowCount-1 ; i>=0 ; i--){
              model.removeRow(i);
            }
            table.setModel(model);
          }
    }
    
    private boolean validateInput(String key){
      boolean check = true; //return false if any input error occurs
      if(key.equals("insertion")){
            name = nameField.getText();
            age = ageField.getText();
            address = addField.getText();
            phoneNo = phoneField.getText();
            jobType = jobField.getText();
            workHour = hourField.getText();
          if(name.isEmpty() || age.isEmpty() || address.isEmpty() || phoneNo.isEmpty() || jobType.isEmpty() || workHour.isEmpty()){
            check = false;  
          }
          if(age.length() > 2 || workHour.length() > 2){
            check = false;
          }
          if(hasLetter(age) || hasLetter(phoneNo) || hasLetter(workHour)){
            check = false;
          }
          if(hasNumber(name) || hasNumber(jobType)){
            check = false;
          }
      }
      else if(key.equals("signUp")){
          if(comNameField.getText().isEmpty() || comAddField.getText().isEmpty() || comwebField.getText().isEmpty()){
            check = false;
          }
          if(AdminField.getText().isEmpty() || PasswordField.getText().isEmpty()){
            check = false;
          } 
      }
      else if(key.equals("login")){
          if(AdminField.getText().isEmpty() || PasswordField.getText().isEmpty()){
            check = false;
          } 
      }
      else if(key.equals("incentive")){
          if(amountField.getText().isEmpty() || hasLetter(amountField.getText())){
            check = false;
          }
      }
     
      else{
            name = upNameField.getText();
            age = upAgeField.getText();
            jobType = upJobField.getText();
            workHour = upHourField.getText();
            address = upAddField.getText();
            phoneNo = upPhoneField.getText();
          if(name.isEmpty() || age.isEmpty() || address.isEmpty() || phoneNo.isEmpty() || jobType.isEmpty() || workHour.isEmpty()){
            check  = false;  
          }
          if(age.length() > 2 || workHour.length() > 2){
            check = false;
          }
          if(hasLetter(age) || hasLetter(phoneNo) || hasLetter(workHour)){
            check = false;
          }
          if(hasNumber(name) || hasNumber(jobType)){
            check = false;
          }
      }
     
     return check;
    }
    
    private boolean hasLetter(String dataField){
      boolean check = false;
        for(int i=0 ; i<dataField.length() ; i++){
          if(Character.isLetter(dataField.charAt(i))){
            check = true;
            break;
          }
          if(Character.isWhitespace(dataField.charAt(i))){
            check = true;
            break;
          }
          if(dataField.charAt(i) == ','){
            check = true;
            break;
          }
        }
      return check;
    }
    
    private boolean hasNumber(String dataField){
      boolean check = false;
        for(int i=0 ; i<dataField.length() ; i++){
          if(Character.isDigit(dataField.charAt(i))){
            check = true;
            break;
          }
          if(dataField.charAt(i) == ','){
            check = true;
            break;
          }
        }
     
      return check;
    }
    
    private void sortTable(JTable table,String key) throws FileNotFoundException{
       employee = new Employee();
       DefaultTableModel model = (DefaultTableModel) table.getModel();
       int rowCount = model.getRowCount();
         
        if(rowCount == 0){ 
          JOptionPane.showMessageDialog(null, "Empty Database","Empty",JOptionPane.ERROR_MESSAGE);
        } 
        else{
           cleanTabel(table);
               list.removeAll(list);
               list = employee.sortData(key);
                for(int i=0 ; i<list.size() ; i++){
                  String[] attributes = list.get(i).split(",");
                  model.addRow(attributes);
                }
           table.setModel(model);
        }
        
    }
     
    private String getOldData(JTable table, int row){
     DefaultTableModel model= (DefaultTableModel) table.getModel();
     String oldLine = "";
          name = model.getValueAt(row, 0).toString();
          sex = model.getValueAt(row, 1).toString();
          address = model.getValueAt(row, 2).toString();
          jobType = model.getValueAt(row, 3).toString();
          date = model.getValueAt(row, 4).toString();
       oldLine = name +","+ sex +","+ address +","+ jobType +","+ date;   
     return oldLine;
    }
    
    private String getNewData(String key){
      String newLine1 = "";
      String newLine2 = "";
          name = upNameField.getText();
          age = upAgeField.getText();
          payRange = comboBox2.getSelectedItem().toString();
          phoneNo = upPhoneField.getText();
            if(upRadioMale.isSelected())
                sex = upRadioMale.getText();
            else
                sex = upRadioFemale.getText();
          address = upAddField.getText();
          jobType = upJobField.getText();
          workHour = upHourField.getText();
          newLine1 = name +","+ sex +","+ address +","+ jobType +",";
          newLine2 = name +","+ age +","+ payRange+"br" +","+ phoneNo +",";
        if(key.equals("mainDB"))
            return newLine1; //to Update mainDB
        else 
            return newLine2; //to Update extraFile
    }
    
    private void UpdateTable(){
        /*Updating the Table*/
       DefaultTableModel model = (DefaultTableModel) updateTable.getModel();
       int Row = updateTable.getSelectedRow();
       
       employee = new Employee();   //create object to calculate and update salary coulmn
       employee.calculateSalary(upHourField.getText(),comboBox2.getSelectedItem().toString());
      
       model.setValueAt(upNameField.getText(),Row ,0);
       if(upRadioMale.isSelected())
          model.setValueAt(upRadioMale.getText(),Row ,1);
       else
          model.setValueAt(upRadioFemale.getText(),Row ,1);  
       model.setValueAt(upAddField.getText(), Row, 2);
       model.setValueAt(upJobField.getText(), Row, 3);
       model.setValueAt(employee.getSalary(), Row, 4);
      
      updateTable.setModel(model);
    }
    
    private void closeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseClicked
         System.exit(0); //custom window close button
    }//GEN-LAST:event_closeLabelMouseClicked

    private void minimizeLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeLabelMouseClicked
         setState(JFrame.ICONIFIED); //custom window minimize button
    }//GEN-LAST:event_minimizeLabelMouseClicked

    private void displayTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayTabMouseClicked
        defaultButtonBack();
        buttonBackModifier("display");
        panelModifier("all");
        panelModifier("display");
        visibelButton("display",true);
        cleanTabel(displayTable);
        sortTab.setVisible(true);
        sortTab.setBackground(new Color(153,255,255));
           employee = new Employee();
           DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
           Object[] columns = {"Name","Sex","Address","Job","Salary"};
           model.setColumnIdentifiers(columns);
            
            try{
               employee.readFromDB();
               list = employee.getList();
                 for(int i=0 ; i<list.size() ; i++){
                   String[] row = list.get(i).split(","); //getting each element
                   model.addRow(row);
                 }
               displayTable.setModel(model);
            }catch (FileNotFoundException ex) {
                //handling IO exception
              JOptionPane.showMessageDialog(null, "Data Reading Error","IO error",JOptionPane.ERROR_MESSAGE);
            }finally{
               moreDisplayBut.setText("More"); //shows more Info of employees
            }
            
    }//GEN-LAST:event_displayTabMouseClicked

    private void searchTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTabMouseClicked
        defaultButtonBack();
        buttonBackModifier("search");
        panelModifier("all");
        panelModifier("search");
        Another.setVisible(false); //If identical persons are found it show us information
    }//GEN-LAST:event_searchTabMouseClicked

    private void deleteTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteTabMouseClicked
        defaultButtonBack();
        buttonBackModifier("delete");
        panelModifier("all");
        panelModifier("delete");
        visibelButton("delete",true);
        cleanTabel(deleteTable);
        sortTab.setVisible(true);
        sortTab.setBackground(new Color(153,255,255));
        deleteInfoLabel.setText("select from the table");
           employee = new Employee();
           DefaultTableModel model = (DefaultTableModel) deleteTable.getModel();
           
            try{
               employee.readFromDB();
               list = employee.getList();
                 for(int i=0 ; i<list.size() ; i++){
                   String[] row = list.get(i).split(",");
                   model.addRow(row);
                 }
               deleteTable.setModel(model);
            } catch (FileNotFoundException ex) {
                 //handling io exception
               JOptionPane.showMessageDialog(null, "Data Reading Error","IO error",JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_deleteTabMouseClicked

    private void modifyTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyTabMouseClicked
        defaultButtonBack();
        buttonBackModifier("modify");
        panelModifier("all");
        panelModifier("modify");
        visibelButton("modify",true);
        cleanTabel(updateTable);
        sortTab.setVisible(true);
        sortTab.setBackground(new Color(153,255,255));
           employee = new Employee();
           DefaultTableModel model = (DefaultTableModel) updateTable.getModel();
           
            try{
               employee.readFromDB();
               list = employee.getList();
                 for(int i=0 ; i<list.size() ; i++){
                   String[] raw = list.get(i).split(",");
                   model.addRow(raw);
                 }
               updateTable.setModel(model);
            }catch (FileNotFoundException ex) {
                //handling io exception
              JOptionPane.showMessageDialog(null, "Data Reading Error","Error",JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_modifyTabMouseClicked

    private void insertTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertTabMouseClicked
        defaultButtonBack();
        buttonBackModifier("insert");
        panelModifier("all");
        panelModifier("insert"); 
    }//GEN-LAST:event_insertTabMouseClicked

    private void homeTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeTabMouseClicked
        defaultButtonBack();
        buttonBackModifier("home");
        panelModifier("all");
        VisibleHome(true);
    }//GEN-LAST:event_homeTabMouseClicked

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        nameField.setText("");
        ageField.setText("");
        addField.setText("");
        jobField.setText("");
        radioMale.setSelected(true);
        comboBox1.setSelectedIndex(0);
        phoneField.setText("");
        hourField.setText("");
        insertInfoLabel.setText("provide all the data fields ");
    }//GEN-LAST:event_clearButtonActionPerformed

    private void insertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButtonActionPerformed
        //Getting employee attributes from each textField
            name = nameField.getText();
            age = ageField.getText();
            address = addField.getText();
            phoneNo = phoneField.getText();
            jobType = jobField.getText();
            workHour = hourField.getText();
            payRange = comboBox1.getSelectedItem().toString();
              if(radioMale.isSelected()){
                sex = radioMale.getText();
              }
              else{
                sex = radioFemale.getText();
              } 
        if(validateInput("insertion")){    
            try {
               employee = new Employee(); 
               employee.calculateSalary(workHour,payRange);
               employee.addToMainDB(name, sex , address , jobType);
               employee.addToExtra(name, age, payRange, phoneNo);
               insertInfoLabel.setText("Data Inserted Successfully");
               clearButton.doClick();
               insertInfoLabel.setText(name + " is registerd successfully!");
               
            } catch (FileNotFoundException ex) {
                 //handling io Exception
              JOptionPane.showMessageDialog(null, "Data Writing Error","IO error",JOptionPane.ERROR_MESSAGE); 
            }
        }
        else{
         JOptionPane.showMessageDialog(null, "Error data entry","Input Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_insertButtonActionPerformed

    private void moreDisplayButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moreDisplayButActionPerformed
        employee = new Employee();
        if(moreDisplayBut.getText().equals("More")){
            try{
               cleanTabel(displayTable);
               DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
               Object[] columns = {"Name","Age","payRange","PhoneNO","Date of Registration"};
               model.setColumnIdentifiers(columns);
                 
                 employee.readFromExtra();
                 list = employee.getList();
                   for(int i=0 ; i<list.size() ; i++){
                      String[] row = list.get(i).split(",");
                      model.addRow(row);
                    }
                 displayTable.setModel(model);
            } catch (FileNotFoundException ex) {
                //handling io exception
              JOptionPane.showMessageDialog(null, "Data Reading Error","IO error",JOptionPane.ERROR_MESSAGE);
            }       
        }
        else{
            try{
                cleanTabel(displayTable);
                DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
                Object[] columns = {"Name","Sex","Address","Job","Salary"};
                model.setColumnIdentifiers(columns);
                
                 employee.readFromDB();
                 list = employee.getList();
                   for(int i=0 ; i<list.size() ; i++){
                      String[] row = list.get(i).split(",");
                      model.addRow(row);
                   }
                 displayTable.setModel(model);
            } catch (FileNotFoundException ex) {
                //handling io exception
              JOptionPane.showMessageDialog(null, "Data Reading Error","IO error",JOptionPane.ERROR_MESSAGE);
            }       
        }
        
        if(displayTable.getColumnName(1).equals("Age"))
            moreDisplayBut.setText("Basic");
        else
            moreDisplayBut.setText("More");
    }//GEN-LAST:event_moreDisplayButActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        employee = new Employee();
          if(searchField.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Provide Name","Empty Input",JOptionPane.ERROR_MESSAGE);
          }
          else{
             try {
              list =  employee.searchPerson(searchField.getText());
              
                if(list.isEmpty()){
                  JOptionPane.showMessageDialog(null, searchField.getText()+ " is not found");
                }
                else{
                   if(list.size()>1){
                     personCounter = list.size()-1;
                     Another.setVisible(true);
                     Another.setText("Suggestion!!  "+list.size() + " of Them found click here to see");
                     
                      String[] attributes = list.get(0).split(",");
                      displayNameLabel.setText(attributes[0]);
                      displaySexLabel.setText(attributes[1]);
                      displayJobLabel.setText(attributes[3]);
                      displayAddressLabel.setText(attributes[2]);
                      displaySalaryLabel.setText(attributes[4]);
                    }
                    else{
                      Another.setVisible(false);
                      String[] attributes = list.get(0).split(",");
                      displayNameLabel.setText(attributes[0]);
                      displaySexLabel.setText(attributes[1]);
                      displayJobLabel.setText(attributes[3]);
                      displayAddressLabel.setText(attributes[2]);
                      displaySalaryLabel.setText(attributes[4]);
                    }
                }
              } catch (FileNotFoundException ex) {
                //handling io exception
               JOptionPane.showMessageDialog(null, "Data Reading Error","IO error",JOptionPane.ERROR_MESSAGE);
              }  
           }
          
    }//GEN-LAST:event_searchButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        employee = new Employee();
        DefaultTableModel model = (DefaultTableModel) deleteTable.getModel();
        int rawSelection = deleteTable.getSelectedRow();
           if(model.getRowCount() == 0)
             JOptionPane.showMessageDialog(null, "Empty Database");
           else{ 
              if(rawSelection < 0){
                JOptionPane.showMessageDialog(null, "No row is Selected");
                deleteInfoLabel.setText("select from the table");
               }
              else{  
                String oldline = getOldData(deleteTable, rawSelection);
                deleteInfoLabel.setText(name + " is selected");
                 int confirm = JOptionPane.showConfirmDialog(null, "Are you sure?", "Delete",JOptionPane.YES_NO_OPTION);
                   if(confirm == JOptionPane.YES_OPTION){
                      try{
                        employee.deletePerson(oldline);  
                        model.removeRow(rawSelection);
                      }catch (IOException ex) {
                          //handling IO errors 
                         JOptionPane.showMessageDialog(null, "Data deletion error","IO error",JOptionPane.ERROR_MESSAGE); 
                      }  
                    }
                   else{
                       deleteInfoLabel.setText(name + " is selected"); //if user cancel deletion
                   }
               }    
            }  
     
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void deleteTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteTableMouseClicked
          /*Tell us which person is selected*/ 
        DefaultTableModel model = (DefaultTableModel) deleteTable.getModel();
        int rawSelection  = deleteTable.getSelectedRow();
        deleteInfoLabel.setText(model.getValueAt(rawSelection, 0).toString() + " is selected");
    }//GEN-LAST:event_deleteTableMouseClicked

    private void FormatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FormatButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) deleteTable.getModel();
        if(model.getRowCount() == 0)
            JOptionPane.showMessageDialog(null, "Empty Database");
        else{
            int confirm = JOptionPane.showConfirmDialog(null, "Are you sure?", "Format",JOptionPane.YES_NO_OPTION);
              if(confirm == JOptionPane.YES_OPTION){
                 try {
                   deleteInfoLabel.setText("");
                   cleanTabel(deleteTable);  
                   employee.formatDatabase();
                  }catch (IOException ex) {
                    //handling io exception
                   JOptionPane.showMessageDialog(null, "Data deletion Error","IO error",JOptionPane.ERROR_MESSAGE);
                  }
               }
        }  
    }//GEN-LAST:event_FormatButtonActionPerformed

    private void searchFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyPressed
          /*Adding keyboard event*/ 
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           searchButton.doClick();
         }
    }//GEN-LAST:event_searchFieldKeyPressed

    private void deleteTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_deleteTableKeyPressed
           /*Adding keyboard event*/
        if(evt.getKeyCode() == KeyEvent.VK_DELETE){
          deleteButton.doClick();
        }
    }//GEN-LAST:event_deleteTableKeyPressed

    private void hourFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hourFieldActionPerformed
        //Adding keyboard event
        insertButton.doClick();
    }//GEN-LAST:event_hourFieldActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        employee = new Employee();
        try {
            String[] passInfo = employee.getPassword().split(",");
            if(validateInput("login")){
               if(PasswordField.getText().equals(passInfo[1]) && AdminField.getText().equalsIgnoreCase(passInfo[0])){
                    LoginPanel.setVisible(false);
                    LoginPanel2.setVisible(false);
                    visibleChoicePanel(true);
                    VisibleHome(true);
                    PasswordField.setText("");
                }
                else{
                  JOptionPane.showMessageDialog(null, "Incorrect password or\nAdministrator name","Login Error",JOptionPane.ERROR_MESSAGE);
                }
            }
            else{
             JOptionPane.showMessageDialog(null, "Empty entry","Login Error",JOptionPane.ERROR_MESSAGE);
            }
        }catch (IOException ex){
          JOptionPane.showMessageDialog(null, "Data reading error","IO error",JOptionPane.ERROR_MESSAGE); 
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) updateTable.getModel();
        int Row = updateTable.getSelectedRow();
        if(model.getRowCount() == 0){ 
           JOptionPane.showMessageDialog(null, "Empty Database");
        }
        else{
           if(Row < 0){ 
              JOptionPane.showMessageDialog(null, "Select row to upadte");
           }
           else{
              if(validateInput("update")){
                  String oldData = getOldData(updateTable, Row);
                  try {
                      UpdateTable();
                      employee = new Employee();
                      payRange = comboBox2.getSelectedItem().toString();
                      workHour = upHourField.getText();
                      employee.calculateSalary(workHour, payRange);
                      employee.UpdateMainDB(oldData,getNewData("mainDB") ,getNewData("extra"));
                      updateInfoLabel.setText("Updated Successfully");
                      updatecancleBut.doClick();
                    }catch (FileNotFoundException ex) {
                      JOptionPane.showMessageDialog(null, "Error Data writing","IO error",JOptionPane.ERROR_MESSAGE);  
                    }
                }
               else{
                 JOptionPane.showMessageDialog(null, "Error Data entry","Update Error",JOptionPane.ERROR_MESSAGE);
                }
            }    
         }   
    }//GEN-LAST:event_updateButtonActionPerformed
    
    private void updateTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateTableMouseClicked
      /*Write the selected person to each Field*/  
        employee = new Employee();
        DefaultTableModel model = (DefaultTableModel) updateTable.getModel();
        int Row = updateTable.getSelectedRow();
        name = model.getValueAt(Row, 0).toString();
          
           upNameField.setText(model.getValueAt(Row, 0).toString());
           if(model.getValueAt(Row, 1).toString().equalsIgnoreCase("male")){
              upRadioMale.setSelected(true);
           }else{
              upRadioFemale.setSelected(true);
           }
          upAddField.setText(model.getValueAt(Row, 2).toString());
          upJobField.setText(model.getValueAt(Row, 3).toString());
             
        try {
            String[] attributes= employee.readLineFromExtra(getOldData(updateTable, Row));
            upAgeField.setText(attributes[1]);
            comboBox2.setSelectedItem(attributes[2].substring(0, attributes[2].length()-2));
            upPhoneField.setText(attributes[3]);
        }catch (FileNotFoundException ex) {
            //handling IO errors 
          JOptionPane.showMessageDialog(null, "File reading error","IO error",JOptionPane.ERROR_MESSAGE);
        }finally{
          updateInfoLabel.setText(name + " is Selected");
        }
    }//GEN-LAST:event_updateTableMouseClicked

    private void updatecancleButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatecancleButActionPerformed
         upNameField.setText("");
         upAgeField.setText("");
         upAddField.setText("");
         upHourField.setText("");
         upPhoneField.setText("");
         upJobField.setText("");
         upRadioMale.setSelected(true);
         comboBox2.setSelectedIndex(0);
         updateInfoLabel.setText("Select row to Update");
    }//GEN-LAST:event_updatecancleButActionPerformed

    private void PasswordFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER && loginButton.isVisible()){
          loginButton.doClick();
        }
        if(evt.getKeyCode() == KeyEvent.VK_ENTER && SignUpButton.isVisible()){
          SignUpButton.doClick();
        }
    }//GEN-LAST:event_PasswordFieldKeyPressed

    private void SignUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpButtonActionPerformed
        if(validateInput("signUp")){
            employee = new Employee();
               try {
                   
                   employee.storeInformation(comNameField.getText(),comAddField.getText(), comwebField.getText());
                   employee.storePassword(AdminField.getText(),PasswordField.getText());
                   titleLabel.setText(comNameField.getText()+"'s"+" "+"Employee DataSystem");
                   promotLabel.setText(comNameField.getText());
                   promotLabel2.setText("Address:   "+comAddField.getText());
                   promotLabel3.setText("Website:   "+comwebField.getText());
                   AdminField.setText("");
                   PasswordField.setText("");
                   loginVisibility("login");
                  
                }catch (FileNotFoundException ex) { 
                  JOptionPane.showMessageDialog(null, "Unable to write data","Error",JOptionPane.ERROR_MESSAGE);
                }
         }
        else{
           JOptionPane.showMessageDialog(null, "Empty data field","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_SignUpButtonActionPerformed

    private void ResetLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResetLabelMouseClicked
            visibleChoicePanel(false);
            panelModifier("all");
            LoginPanel.setVisible(true);
            LoginPanel2.setVisible(true);
            loginVisibility("signup");
            backToLogin.setVisible(true);
      
    }//GEN-LAST:event_ResetLabelMouseClicked

    private void sortTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sortTabMouseClicked
        sortTab.setBackground(Color.ORANGE);
        try{  
           if(jScrollPane1.isVisible()){
               if(moreDisplayBut.getText().equalsIgnoreCase("basic"))
                 sortTable(displayTable,"extra");
               else
                 sortTable(displayTable, "normal");
            }
           else if(jScrollPane2.isVisible()){
              sortTable(deleteTable,"normal");
            }
           else if(jScrollPane3.isVisible()){
              sortTable(updateTable,"normal");
           }
        }catch(FileNotFoundException ex){
          JOptionPane.showMessageDialog(null, "Data Reading Error","IO error",JOptionPane.ERROR_MESSAGE);
        }   
    }//GEN-LAST:event_sortTabMouseClicked

    private void backToLoginMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backToLoginMouseClicked
        loginVisibility("login");
    }//GEN-LAST:event_backToLoginMouseClicked

    private void AnotherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnotherMouseClicked
       if(personCounter < 0){
         personCounter = list.size()-1; //back again after all are displayed
       }
        String[] attributes = list.get(personCounter).split(",");
           displayNameLabel.setText(attributes[0]);
           displaySexLabel.setText(attributes[1]);
           displayJobLabel.setText(attributes[3]);
           displayAddressLabel.setText(attributes[2]);
           displaySalaryLabel.setText(attributes[4]);
       personCounter--;
    }//GEN-LAST:event_AnotherMouseClicked

    private void IncentiveTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IncentiveTabMouseClicked
        panelModifier("all");
        panelModifier("incentive");
        amountField.setText("");
        incentiveList.setVisible(false);
        incentive = new EmployeeIncentive();
        try {
            list = incentive.nameList(); //Employee name list for the combox 
            DefaultComboBoxModel model = new DefaultComboBoxModel();
             for(String x: list){
               model.addElement(x);  //adding name of employees in the combox
             }
            comboBox3.setModel(model);
        } catch (IOException ex) {
            //handling IO error
          JOptionPane.showMessageDialog(null, "Data Reading Error","IO error",JOptionPane.ERROR_MESSAGE); 
        }
        
    }//GEN-LAST:event_IncentiveTabMouseClicked

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
       if(validateInput("incentive")){ 
           incentive = new EmployeeIncentive();
           int lineNO = comboBox3.getSelectedIndex();   //a line of each employee is the index of the combox
           String amount  = amountField.getText();
           try{
              incentive.filterIncentives();             //clear out previous month incentives
              incentive.addIncentives(lineNO, amount);  //adding to the incentive file
              amountField.setText("paid successfully");
           } catch (IOException ex) {
             JOptionPane.showMessageDialog(null, "Data Reading Error","IO error",JOptionPane.ERROR_MESSAGE); 
           }
       }else{
        JOptionPane.showMessageDialog(null, "Error data Entry","Input error",JOptionPane.ERROR_MESSAGE);
       }    
    }//GEN-LAST:event_payButtonActionPerformed

    private void paidEmployeesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paidEmployeesMouseClicked
        incentiveList.setVisible(true);
        incentive = new EmployeeIncentive();
        try{
            incentive.filterIncentives();
            list = incentive.lineofIncentives(); //accessing paid employees
            
            if(!list.isEmpty()){
              DefaultListModel<String> model = new DefaultListModel<>();
              for(String x: list){
                model.addElement(x);   //adding name of paid employees to the Jlist
              }
             incentiveList.setModel(model);
            }
        }catch(IOException ex){
          JOptionPane.showMessageDialog(null, "Data Reading Error","IO error",JOptionPane.ERROR_MESSAGE);
        }
               
    }//GEN-LAST:event_paidEmployeesMouseClicked
    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AdminField;
    private javax.swing.JLabel AdminText;
    private javax.swing.JLabel Another;
    private javax.swing.JLabel EmployeeNoLabel;
    private javax.swing.JButton FormatButton;
    private javax.swing.JLabel IncentiveLable;
    private javax.swing.JLabel IncentiveName;
    private javax.swing.JLabel IncentiveTab;
    private javax.swing.JList<String> JobList;
    private javax.swing.JSeparator Line1;
    private javax.swing.JSeparator Line2;
    private javax.swing.JSeparator Line3;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JPanel LoginPanel2;
    private javax.swing.JLabel NamePromotion;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel PasswordText;
    private javax.swing.JLabel ResetLabel;
    private javax.swing.JButton SignUpButton;
    private javax.swing.JLabel WorkerNoLabel;
    private javax.swing.JTextField addField;
    private javax.swing.JLabel addLabel;
    private javax.swing.JTextField ageField;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JTextField amountField;
    private javax.swing.JLabel amountLable;
    private javax.swing.JLabel appLabel;
    private javax.swing.JLabel appLabel2;
    private javax.swing.JLabel appLabel3;
    private javax.swing.JLabel appLabel4;
    private javax.swing.JLabel backToLogin;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel choicePanel;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel closeLabel;
    private javax.swing.JLabel colorBackground2;
    private javax.swing.JLabel colorbackground;
    private javax.swing.JTextField comAddField;
    private javax.swing.JLabel comAddLabel;
    private javax.swing.JTextField comNameField;
    private javax.swing.JLabel comNameLabel;
    private javax.swing.JComboBox<String> comboBox1;
    private javax.swing.JComboBox<String> comboBox2;
    private javax.swing.JComboBox<String> comboBox3;
    private javax.swing.JLabel comemailLabel;
    private javax.swing.JTextField comwebField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel deleteInfoLabel;
    private javax.swing.JLabel deleteTab;
    private javax.swing.JTable deleteTable;
    private javax.swing.JLabel displayAddressLabel;
    private javax.swing.JLabel displayJobLabel;
    private javax.swing.JLabel displayNameLabel;
    private javax.swing.JLabel displaySalaryLabel;
    private javax.swing.JLabel displaySexLabel;
    private javax.swing.JLabel displayTab;
    private javax.swing.JTable displayTable;
    private javax.swing.JLabel homeTab;
    private javax.swing.JTextField hourField;
    private javax.swing.JLabel hourLabel;
    private javax.swing.JLabel iconLabel;
    private javax.swing.JList<String> incentiveList;
    private javax.swing.JPanel incentivePanel;
    private javax.swing.JButton insertButton;
    private javax.swing.JLabel insertInfoLabel;
    private javax.swing.JPanel insertPanel;
    private javax.swing.JLabel insertTab;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField jobField;
    private javax.swing.JLabel jobLabel;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel minimizeLabel;
    private javax.swing.JLabel modifyTab;
    private javax.swing.JButton moreDisplayBut;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel paidEmployees;
    private javax.swing.JButton payButton;
    private javax.swing.JTextField phoneField;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JLabel promotLabel;
    private javax.swing.JLabel promotLabel2;
    private javax.swing.JLabel promotLabel3;
    private javax.swing.JRadioButton radioFemale;
    private javax.swing.JRadioButton radioMale;
    private javax.swing.JLabel rangeLabel1;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JLabel searchLabel2;
    private javax.swing.JLabel searchLabel3;
    private javax.swing.JLabel searchLabel4;
    private javax.swing.JLabel searchLabel5;
    private javax.swing.JLabel searchLabel6;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JLabel searchTab;
    private javax.swing.JLabel sexLabel;
    private javax.swing.JLabel signupText;
    private javax.swing.JLabel sortTab;
    private javax.swing.JPanel tabPanel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField upAddField;
    private javax.swing.JLabel upAddressLable;
    private javax.swing.JTextField upAgeField;
    private javax.swing.JLabel upAgeLable;
    private javax.swing.JTextField upHourField;
    private javax.swing.JLabel upHourLable;
    private javax.swing.JTextField upJobField;
    private javax.swing.JLabel upJobLable;
    private javax.swing.JTextField upNameField;
    private javax.swing.JLabel upNameLable;
    private javax.swing.JTextField upPhoneField;
    private javax.swing.JLabel upPhoneLable;
    private javax.swing.JRadioButton upRadioFemale;
    private javax.swing.JRadioButton upRadioMale;
    private javax.swing.JLabel upRangeLable;
    private javax.swing.JLabel upSexLable;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel updateInfoLabel;
    private javax.swing.JTable updateTable;
    private javax.swing.JButton updatecancleBut;
    // End of variables declaration//GEN-END:variables
}
